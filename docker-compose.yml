version: '3.3'
services:
  backend:
    container_name: backend
    build: ./backend
    env_file: ./backend/.env
    working_dir: /app
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - minio-service
    volumes:
      - ./backend:/app
    command: yarn start:dev
    networks:
      - bridge
    extra_hosts:
      - "host.docker.internal:host-gateway"

  client:
    container_name: client
    build: ./client
    env_file: ./client/.env
    working_dir: /app
    ports:
      - "4000:4000"
    networks:
      - bridge
    depends_on:
      - backend
    command: yarn start

  postgres:
    image: postgres
    env_file: ./backend/.env
    environment:
      POSTGRES_DB: 'blog-db'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'root'
    volumes:
      - .:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    networks:
      - bridge

  minio-service:
    image: minio/minio
    container_name: minio-service
    env_file: ./backend/.env
    ports:
      - 9000:9000
      - 9099:9099
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_ACCESS_KEY: ${MINIO_SERVER_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SERVER_SECRET_KEY}
    command: server --address ":9099" --console-address ":9000" /data
    networks:
      - bridge

  createbuckets:
    image: minio/mc
    depends_on:
      - minio-service
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio-service:9099 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb minio/media;
      /usr/bin/mc policy set download minio/media;
      /usr/bin/mc mb minio/static;
      /usr/bin/mc policy set download minio/static;
      exit 0;
      "
    networks:
      - bridge

networks:
  bridge:
    driver: bridge
