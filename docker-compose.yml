version: '3.3'
services:
  backend1:
    container_name: backend1
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: ./backend/.env
    working_dir: /app
    ports:
      - "3001:3001"
    depends_on:
      - postgres1
      - minio-service1
    volumes:
      - ./backend:/app
    command: yarn start:dev
    networks:
      - bridge
    extra_hosts:
      - "host.docker.internal:host-gateway"

  client1:
    container_name: client1
    build:
      context: ./client
      dockerfile: Dockerfile
    env_file: ./client/.env
    working_dir: /app
    ports:
      - "3000:3000"
    networks:
      - bridge
    depends_on:
      - backend1
    command: yarn start

  postgres1:
    container_name: postgres1
    image: postgres
    env_file: ./backend/.env
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    volumes:
      - .:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    networks:
      - bridge

  minio-service1:
    image: minio/minio
    container_name: minio-service1
    env_file: ./backend/.env
    ports:
      - 9000:9000
      - 9099:9099
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_ACCESS_KEY: lskdfhghn8975
      MINIO_SECRET_KEY: jkshdgo76
    command: server --address ":9099" --console-address ":9000" /data
    networks:
      - bridge

  createbuckets1:
    container_name: createbuckets1
    image: minio/mc
    depends_on:
      - minio-service1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio-service1:9099 minioadmin minioadmin) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb minio/media;
      /usr/bin/mc policy set download minio/media;
      /usr/bin/mc mb minio/static;
      /usr/bin/mc policy set download minio/static;
      exit 0;
      "
    networks:
      - bridge

  nginx:
    image: nginx:bookworm
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    networks:
      - bridge
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  bridge:
    driver: bridge
